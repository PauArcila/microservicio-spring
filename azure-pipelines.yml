# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- azure-pipelines

pool:
  vmImage: ubuntu-latest

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'pauarcila'
    projectKey: 'PauArcila_microservicio-spring'
    projectName: 'microservicio-spring'
  displayName: 'SonarCloud Prepare'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.5.0.2730'
    spotBugsAnalysis: false

# - task: Docker@2
#   inputs:
#     containerRegistry: 'Docker'
#     command: 'login'
  
# - task: Docker@2
#   inputs:
#     containerRegistry: 'Docker'
#     repository: 'pauarcila/microservicio-spring'
#     command: 'build'
#     Dockerfile: '**/Dockerfile'

# - task: Docker@2
#   inputs:
#     containerRegistry: 'Docker'
#     repository: 'pauarcila/microservicio-spring'
#     command: 'push'

  - job: 
    pool: 'Default'
    steps:
      - task: Docker@2
        inputs:
          connectionType: 'None'
          command: 'apply'
          arguments: '-f deployment-app.yaml'
    
  # - script: kubectl port-forward deploy/microservicio-spring-deployment 8080:8080